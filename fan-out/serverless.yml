service: fan-out

plugins:
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    USER_TABLE: ${self:service}-${self:provider.stage}-users

custom:
  topicName: ${self:service}-${self:provider.stage}-message-topic
  topicArn: arn:aws:sns:${self:provider.region}:#{AWS::AccountId}:${self:custom.topicName}

functions:
  create:
    handler: handlers/create.handler
    environment:
      TOPIC_ARN: ${self:custom.topicArn}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USER_TABLE}
      - Effect: Allow
        Action:
          - "sns:Publish"
        Resource: ${self:custom.topicArn}
    events:
      - http:
          path: users/create
          method: post
          cors: true
  sendEmail:
    handler: handlers/sendEmail.handler
    environment:
      SENDER_EMAIL: ${env:SENDER_EMAIL_ADDRESS}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "ses:SendEmail"
        Resource: arn:aws:ses:${self:provider.region}:#{AWS::AccountId}:*
    events:
      - sns: ${self:custom.topicArn}
  sendSms:
    handler: handlers/sendSms.handler
    iamRoleStatements:
      - Effect: Deny
        Action:
          - "sns:Publish"
        Resource: "arn:aws:sns:*:*:*"
      - Effect: Allow
        Action:
          - "sns:Publish"
        Resource: "*"
    events:
      - sns: ${self:custom.topicArn}

resources:
  Resources:
    MessagingTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.topicName}
    UserDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_TABLE}
